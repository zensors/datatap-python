steps:
  - label: ":copyright: Typechecking Module"
    commands:
      - "echo '--- Setting Up'"
      - "mkdir -p /build"
      - "cp -R . /build"
      - "cd /build"
      - "echo '--- Installing Packages'"
      - "pip install -r requirements_torch.txt"
      - "pip install -e '.[metrics,torch]'"
      - "yarn global add pyright"
      - "echo '+++ Running Pyright'"
      - "pyright"
    if: build.message !~ /skip tests/
    plugins:
      - docker#v3.7.0:
          image: "nikolaik/python-nodejs:python3.8-nodejs12"

  - label: ":python: Testing Module"
    commands:
      - "echo '--- Setting Up'"
      - "mkdir -p /test"
      - "cp -R . /test"
      - "cd /test"
      - "echo '--- Installing Packages'"
      - "pip install -e '.[metrics]'"
      - "echo '+++ Running Tests'"
      - "python -m unittest discover tests"
    if: build.message !~ /skip tests/
    plugins:
      - docker#v3.7.0:
          image: "python:3.8"

  - wait

  - label: ":package: Building and Pushing Wheel"
    commands:
      - "python3.7 setup.py bdist_wheel"
      - "twine upload -r datatap dist/*"
      - "twine upload -r zensors dist/*"
    if: build.branch == "master"

  - label: ":package: Building and Pushing Documentation"
    commands:
      - "echo '--- Setting Up'"
      - "mkdir -p /build"
      - "cp -R . /build"
      - "cd /build"
      - "echo '--- Installing Packages'"
      - "pip install -r requirements_torch.txt"
      - "pip install -e '.[metrics,torch,tf]'"
      - "pip install pdoc3 awscli"
      - "echo '+++ Compiling Docs'"
      - "pdoc3 datatap --html"
      - "echo '+++ Uploading Docs'"
      - "cd html/datatap && aws s3 cp --recursive --acl public-read . s3://docs.datatap.dev/"
    plugins:
      - docker#v3.7.0:
          image: "python:3.8"
          volumes:
            - "/var/lib/buildkite-agent/.aws/:/root/.aws/"
    if: build.branch == "master"

  - label: ":github: Pushing to github"
    commands:
      - "yes | git remote add gh git@github.com:Zensors/datatap-python.git || true"
      - "git push gh ${BUILDKITE_BRANCH}"
    if: "build.branch !~ /^refs/"
